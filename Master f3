#include <SoftwareSerial.h>

//PARA ENTRAR EN MODO ZAT CONECTAR EL ARD-PIN3 CON HC05-KEY
//NAME=HC05 ; ROLE=0 ; PSWD=1234

//#define ZigVCC 2
//#define ZigTX  3
//#define ZigRX  4
//#define ZigGND 5

#define btVCC  7
#define btTX   8
#define btRX   9

// Constantes 
#define VERSION "MF3Vfinal -> "
#define DhtGND  8       // Pin GND del DHT22
#define DhtPIN  9       // Pin de lectura del DHT22
#define DhtVCC  10      // Pin VCC del DHT22
#define DhtTYPE DHT22   // Tipo de sensor de temperatura y humedad (DHT22)  
#define ZigVCC  2       // Detalle de los pines ...
#define ZigTX   3       // a los que conectado el ...
#define ZigRX   4       // Remote ZigBee CC2530 ...   
#define ZigGND  5       // 2.4G Serial 
#define releFAR 12      // Pin de control del Rele 1 (Farolas)
#define releCST 13      // Pin de control del Rele 2 (Caseta)
#define releCHM 6       // Pin de control del Rele 3 (Chamizo)
#define releCAR 7       // Pin de control del Rele 4 (Caravana)
#define MI_ID   0       // Identificador del modulo ZigBee (id=0 para MASTER; id=1 para REMOTO1)




SoftwareSerial Zig(ZigTX, ZigRX)    ;
String str,  srv, temp, hume;
int a = 0;


//SoftwareSerial Bt(btTX, btRX); // RX | TX

void setup() {
pinMode(btVCC, OUTPUT);  // this pin will pull the HC-05 pin 34 (key pin) HIGH to switch module to AT mode
digitalWrite(btVCC, HIGH);

  // activar alimentaiones

  pinMode(ZigVCC, OUTPUT);  // patilla Vcc del Zig
  digitalWrite(ZigVCC, HIGH);
  pinMode(ZigGND, OUTPUT);  // patilla - del Zig
  digitalWrite(ZigGND, LOW);
  Zig.begin(57600);
  //Zig.setTimeout(50);
delay(2000);
Serial.begin(9600);
Serial.println("Testo recepcion en master:");
//Bt.begin(38400);  // HC-05 default speed in AT command more
}

void loop() {
  delay(3000);
  if (Serial.available()) leer_Serial();  // Permite el envio de MSG-prueba por consola 
  if (Zig.available())    leer_Zig();     // Entrada productiva de MSGs
  //Zig.print("#1:1:0:0:0/");
}




/* codigo copiado literal
 *  
 */
void leer_Serial() {
  log(" entrando en leerSerial",-99,-99,-99,-99);
  String msg = "";
  char inChar;
  // posicionamiento al principio del mensaje
  while (Serial.available() && inChar != '#' ) {
    inChar = Serial.read();
    log("  Serial. Leido y desechado: "+inChar,-99,-99,-99,-99);
  }  
  // carga msg hasta el final del mensaje
  while (Serial.available() && inChar != '/' ) {
    inChar = Serial.read();
    msg += inChar;
  }  
  log(" MSG leido: #"+msg,-99,-99,-99,-99);
  // codigo alterado
  formatear_msg(msg);
  //Zig.print("#"+msg);
}

void leer_Zig() {
  log(" entrando en leerZig",-99,-99,-99,-99);
  String msg = "";
  char inChar;
  // posicionamiento al principio del mensaje
  while (Zig.available() && inChar != '#' ) {
    inChar = Zig.read();
    log("  Zig. Leido y desechado: "+inChar,-99,-99,-99,-99);
  }  
  // carga msg hasta el final del mensaje
  while (Zig.available() && inChar != '/' ) {
    inChar = Zig.read();
    msg += inChar;
  }  
  log(" MSG leido: #"+msg,-99,-99,-99,-99);
  formatear_msg(msg);
}
